{
  "version": 3,
  "sources": ["../../Routes/cominication.ts"],
  "sourcesContent": ["import { Router } from \"express\";\nimport Pusher from \"pusher\";\nconst Client = require(\"@replit/database\");\nimport { randomIDGen } from \"../utils\";\n\nexport const router = Router();\nconst pusher = new Pusher({\n  //@ts-ignore\n  appId: process.env['PUSHER_ID'],\n  //@ts-ignore\n  key: process.env['PUSHER_KEY'],\n  //@ts-ignore\n  secret: process.env['PUSHER_SECRET'],\n  cluster: \"eu\",\n  useTLS: true\n})\nconst db = new Client();\n\nrouter.post('/create', async (req, res) => {\n  var id = randomIDGen(4);\n  var isNotAvailable = await db.get(id);\n\n  while (isNotAvailable == true) {\n    id = randomIDGen(4);\n    isNotAvailable = await db.get(id);\n  }\n\n  db.set(id, true);\n  res.status(201);\n  res.send(id);\n})\n\nrouter.post('/:id/offer', async (req, res) => {\n  const id = req.params.id;\n  const sdp = req.body;\n\n  try {\n    db.set(`${id}:offer`, sdp);\n    res.sendStatus(201);\n  } catch (error) {\n    console.error(error);\n    res.sendStatus(500);\n  }\n})\n\nrouter.get('/:id/offer', async (req, res) => {\n  const id = req.params.id;\n\n  try {\n    const offer = await db.get(`${id}:offer`);\n    res.send(offer);\n    db.delete(`${id}:offer`);\n  } catch (error) {\n    console.error(error);\n    res.sendStatus(500);\n  }\n})\n\nrouter.post('/:id/answer', async (req, res) => {\n  const id = req.params.id;\n  const sdp = req.body;\n\n  try {\n    db.set(`${id}:answer`, sdp);\n    res.sendStatus(201);\n  } catch (error) {\n    console.error(error);\n    res.sendStatus(500);\n  }\n})\n\nrouter.get('/:id/answer', async (req, res) => {\n  const id = req.params.id;\n\n  try {\n    let offer = await db.get(`${id}:answer`);\n\n    while (typeof offer != \"string\") {\n      offer = await db.get(`${id}:answer`);\n    }\n\n    res.send(offer);\n    db.delete(`${id}:answer`);\n    db.set(`${id}:ice`, true);\n  } catch (error) {\n    console.error(error);\n    res.sendStatus(500);\n  }\n})\n\nrouter.post('/:id/ice', async (req, res) => {\n  const id = req.params.id;\n  const socket_id = req.query.socketID?.toString();\n  const sdp = req.body;\n\n  if (socket_id == undefined) {\n    res.sendStatus(400);\n    return;\n  }\n\n  let ice = await db.get(`${id}:ice`);\n  while (ice == null) {\n    ice = await db.get(`${id}:ice`);\n  }\n\n  try {\n    await pusher.trigger(`cache-${id}`, \"ice\", sdp, { socket_id });\n    res.sendStatus(201);\n  } catch (error) {\n    console.error(error);\n    res.sendStatus(500);\n  }\n})\n\nrouter.delete('/:id', (req, res) => {\n  const id = req.params.id;\n  db.deleteMultiple(id, `${id}:offer`, `${id}:answer`)\n  res.sendStatus(200);\n})"],
  "mappings": "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",
  "names": ["Pusher"]
}
